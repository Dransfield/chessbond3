
 <% if (req.session.passport) { %>
			<% if (req.session.passport.user) { %>
			<div ng-init="joinImOnlineRoom()"></div>
			<div ng-init="getuser('<%-req.session.passport.user%>')"></div>
   		<% } %>
	<% } %>
    <% var Myid='0'%>
    <% if (req.session.passport) { %>
			<% if (req.session.passport.user) { %>
			<% Myid=req.session.passport.user;%>
			<% } %>
	<% } %>

    
 <%- include('partials/navbar',{userid:Myid,Myid:Myid}); %>
  
  <!--
  <form ng-submit="submitLevelForm()"
  
					<div class="form-group">
						<input ng-model="LevelForm.level" type="text" placeholder="Email" name="email" class="form-control">
					</div>
				
					<button type="submit" class="btn btn-success">
					<span ng-show="!LevelForm.loading">Update Level</span>
					</button>
					<input type="hidden" name="_csrf" value="<%= _csrf %>" />
				</form>
	-->
	
	<form ng-hide="hidedifficulty" id="levelform" ng-submit="PressedGoButton()" >
	<h2>Choose a difficulty level:</h2>
	<select ng-model="LevelForm.level" id="levelpicker" class="form-control bg-success" data-style="btn-success">
	  <option>1</option>
	  <option>2</option>
	  <option>3</option>
	  <option>4</option>
	  <option>5</option>
	  <option>6</option>
	  <option>7</option>
	  <option>8</option>
	  <option>9</option>
	  <option>10</option>
	  <option>11</option>
	  <option>12</option>
	  <option>13</option>
	  <option>14</option>
	  <option>15</option>
	  <option>16</option>
	  <option>17</option>
	  <option>18</option>
	  <option>19</option>
	  <option>20</option>
	</select>
	<button id="go button" type="submit" class="btn btn-success">Go</button>
	</form>
	<p id="fenshower">
	
	</p>
	<form ng-submit="injectfen()">
	<input ng-model="fenform.fen" type="text" id="feninject">
	
	</input>
	
	<button type="submit" id="injectbutton" class="btn btn-success">Inject</button>
	</form>
	<script></script>
    <div class="row" id="whole thing" ng-hide="hideboard">
      <div class="col-sm-7 col-md-6">
        <span class="h3" id="time1">0:05:00</span>
        <div id="board" style="width: 400px"></div>
        <span class="h3" id="time2">0:05:00</span>
        <hr>
        <div id="engineStatus">...</div>
      </div>
      <div class="col-sm-5 col-md-6">
        <!-- <h3>Moves:</h3>
        <div id="pgn"></div>
        <hr>
        <form class="form-horizontal">
          <div class="form-group">
            <label for="timeBase" class="control-label col-xs-4 col-sm-6 col-md-4">Base time (min)</label>
            <div class="col-xs-4 col-sm-6 col-md-4">
              <input type="number" class="form-control" id="timeBase" value="5">
            </div>
          </div>
          <div class="form-group">
            <label for="timeInc" class="control-label col-xs-4 col-sm-6 col-md-4">Increment (sec)</label>
            <div class="col-xs-4 col-sm-6 col-md-4">
              <input type="number" class="form-control" id="timeInc" value="2">
            </div>
          </div>
          <div class="form-group">
            <label for="skillLevel" class="control-label col-xs-4 col-sm-6 col-md-4">Skill Level (0-20)</label>
            <div class="col-xs-4 col-sm-6 col-md-4">
              <input type="number" class="form-control" id="skillLevel" value="0">
            </div>
          </div>
          <div class="form-group">
            <label for="color" class="control-label col-xs-4 col-sm-6 col-md-4">I play</label>
            <div class="col-xs-4 col-sm-6 col-md-4">
              <div class="btn-group" data-toggle="buttons">
                <label class="btn btn-primary active" id="color-white"><input type="radio" name="color">White</label>
                <label class="btn btn-primary" id="color-black"><input type="radio" name="color">Black</label>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label for="showScore" class="control-label col-xs-4 col-sm-6 col-md-4">Show score</label>
            <div class="col-xs-4 col-sm-6 col-md-4">
              <input type="checkbox" class="form-control" id="showScore" checked>
            </div>
          </div>
          <div class="form-group">
            <label for="color" class="control-label col-xs-4 col-sm-6 col-md-4"></label>
            <div class="col-xs-4 col-sm-6 col-md-4">
              <button type="button" class="btn btn-primary" onclick="newGame()">New Game</button>
            </div>
          </div>
          -->
          <form class="form-horizontal">
          <div class="form-group">
            <label for="color" class="control-label col-xs-4 col-sm-6 col-md-4">Promote to</label>
            <div class="col-xs-4 col-sm-6 col-md-4">
              <select id=promote>
                <option value=q selected>Queen</option>
                <option value=r>Rook</option>
                <option value=b>Bishop</option>
                <option value=n>Knight</option>
              </select>
            </div>
          </div>
        </form>
        
        <h5>Evaluation</h5>
        <pre id=evaluation></pre>
    </div>
     <!--<script>$( "div[id='whole thing']" ).hide();</script>-->
    <!--<script src="enginegame.js"></script>-->
    <script>
      var wait_for_script;
      var newGame = function (){};
      
      /// We can load Stockfish.js via Web Workers or directly via a <script> tag.
      /// Web Workers are better since they don't block the UI, but they are not always avaiable.
      (function fix_workers()
      {
        var script_tag;
        /// Does the environment support web workers?  If not, include stockfish.js directly.
        ///NOTE: Since web workers don't work when a page is loaded from the local system, we have to fake it there too. (Take that security measures!)
        if (!Worker || (location && location.protocol === "file:")) {
          var script_tag  = document.createElement("script");
          script_tag.type ="text/javascript";
          script_tag.src  = "stockfish.js";
         // script_tag.onload = init;
          document.getElementsByTagName("head")[0].appendChild(script_tag);
          wait_for_script = true;
        }
      }());
      
       function init(skl,theme)
      {
        var game = engineGame('',theme);
    
        newGame = function newGame(skl) {
            var baseTime = 5 * 60;
            var inc = 2;
            //var skill = parseInt($('#skillLevel').val());
            var skill=skl;
            //toastr.success('True skill Level: '+skill);
            game.reset();
            game.setTime(baseTime, inc);
            game.setSkillLevel(skl);
            game.setPlayerColor('white');
            game.setDisplayScore(true);
            game.start();
        
			 
        
        game.setSkillLevel
       
       // document.getElementById("skillLevel").addEventListener("change", function ()
        //{
        //    game.setSkillLevel(parseInt(this.value, 10));
        //});
    
        newGame(skl);
        $( "p[id='fenshower']" ).html(game.fen());
        	    $( "button[id='injectbutton'" ).click(function() {
			alert( "Handler for .click() called."+$("input[id='feninject']" ).val());
			game.injectgame($( "input[id='feninject']" ).val());
			game.injectboard($( "input[id='feninject']" ).val());
  
			});
        
        
      }
      return game;}
    
      
      
       //$( "button[id='go button'" ).click(function() {
			//toastr.success('Playing against AI Level: '+$("input[id='feninject']" ));
			//$( "div[id='whole thing']" ).show(5000);
			//$( "form[id='levelform']" ).hide(1000);
			//init($("input[id='levelpicker']" ).val());
    		//.});
    	
      /// If we load Stockfish.js via a <script> tag, we need to wait until it loads.
      //if (!wait_for_script) {
      //  document.addEventListener("DOMContentLoaded", init);
     // }
    </script>
   
 
